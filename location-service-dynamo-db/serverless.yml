service: location-service

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*"


functions:
  getNearestLocations:
    handler: handler.getNearestLocations

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: hashKey
            AttributeType: N
          -
            AttributeName: rangeKey
            AttributeType: S
          -
            AttributeName: geohash
            AttributeType: N
        KeySchema:
          -
            AttributeName: hashKey
            KeyType: HASH
          -
            AttributeName: rangeKey
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        LocalSecondaryIndexes:
          - IndexName: geohash-index
            KeySchema:
            - AttributeName: hashKey
              KeyType: HASH
            - AttributeName: geohash
              KeyType: RANGE
            Projection:
              ProjectionType: ALL
        TableName: ${self:provider.environment.DYNAMODB_TABLE}